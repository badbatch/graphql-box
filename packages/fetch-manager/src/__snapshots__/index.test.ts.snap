// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@graphql-box/fetch-manager >> batching >> multiple requests >> correct request 1`] = `
Array [
  "https://api.github.com/graphql?requestId=f666cc27cdcfcecacb340b64fcf27506-70a245971c9c179bc5c30c3925e4881c",
  Object {
    "body": "{\\"batched\\":true,\\"context\\":{\\"boxID\\":\\"123456789\\",\\"operation\\":\\"query\\"},\\"request\\":{\\"f666cc27cdcfcecacb340b64fcf27506\\":{\\"request\\":\\"\\\\n    {\\\\n      organization(login: \\\\\\"facebook\\\\\\") {\\\\n        description\\\\n        login\\\\n        id\\\\n      }\\\\n    }\\\\n  \\",\\"whitelistHash\\":\\"\\"},\\"70a245971c9c179bc5c30c3925e4881c\\":{\\"request\\":\\"\\\\n    {\\\\n      organization(login: \\\\\\"facebook\\\\\\") {\\\\n        email\\\\n        name\\\\n        url\\\\n        id\\\\n      }\\\\n    }\\\\n  \\",\\"whitelistHash\\":\\"\\"}}}",
    "headers": Headers {
      Symbol(map): Object {
        "content-type": Array [
          "application/json",
        ],
      },
    },
    "method": "POST",
  },
]
`;

exports[`@graphql-box/fetch-manager >> batching >> multiple requests >> correct response data 1`] = `
Object {
  "data": Object {
    "organization": Object {
      "description": "We are working to build community through open source technology. NB: members must have two-factor auth.",
      "id": "MDEyOk9yZ2FuaXphdGlvbjY5NjMx",
      "login": "facebook",
    },
  },
  "headers": Headers {
    Symbol(map): Object {
      "Content-Length": Array [
        "414",
      ],
      "Content-Type": Array [
        "application/json",
      ],
      "cache-control": Array [
        "public, max-age=5",
      ],
    },
  },
}
`;

exports[`@graphql-box/fetch-manager >> batching >> multiple requests >> correct response data 2`] = `
Object {
  "data": Object {
    "organization": Object {
      "email": "",
      "id": "MDEyOk9yZ2FuaXphdGlvbjY5NjMx",
      "name": "Facebook",
      "url": "https://github.com/facebook",
    },
  },
  "headers": Headers {
    Symbol(map): Object {
      "Content-Length": Array [
        "414",
      ],
      "Content-Type": Array [
        "application/json",
      ],
      "cache-control": Array [
        "public, max-age=5",
      ],
    },
  },
}
`;

exports[`@graphql-box/fetch-manager >> batching >> single request >> correct request 1`] = `
Array [
  "https://api.github.com/graphql?requestId=ea1cbc58eca798225b53f59d95ffb23a",
  Object {
    "body": "{\\"batched\\":true,\\"context\\":{\\"boxID\\":\\"123456789\\",\\"operation\\":\\"query\\"},\\"request\\":{\\"ea1cbc58eca798225b53f59d95ffb23a\\":{\\"request\\":\\"\\\\n  {\\\\n    organization(login: \\\\\\"facebook\\\\\\") {\\\\n      description\\\\n      email\\\\n      login\\\\n      name\\\\n      url\\\\n      id\\\\n    }\\\\n  }\\\\n\\",\\"whitelistHash\\":\\"\\"}}}",
    "headers": Headers {
      Symbol(map): Object {
        "content-type": Array [
          "application/json",
        ],
      },
    },
    "method": "POST",
  },
]
`;

exports[`@graphql-box/fetch-manager >> batching >> single request >> correct response data 1`] = `
Object {
  "data": Object {
    "organization": Object {
      "description": "We are working to build community through open source technology. NB: members must have two-factor auth.",
      "email": "",
      "id": "MDEyOk9yZ2FuaXphdGlvbjY5NjMx",
      "login": "facebook",
      "name": "Facebook",
      "url": "https://github.com/facebook",
    },
  },
  "headers": Headers {
    Symbol(map): Object {
      "Content-Length": Array [
        "315",
      ],
      "Content-Type": Array [
        "application/json",
      ],
      "cache-control": Array [
        "public, max-age=5",
      ],
    },
  },
}
`;

exports[`@graphql-box/fetch-manager >> no batching >> when batch is false >> correct request 1`] = `
Array [
  "https://api.github.com/graphql?requestId=ea1cbc58eca798225b53f59d95ffb23a",
  Object {
    "body": "{\\"batched\\":false,\\"context\\":{\\"boxID\\":\\"123456789\\",\\"operation\\":\\"query\\",\\"whitelistHash\\":\\"\\"},\\"request\\":\\"\\\\n  {\\\\n    organization(login: \\\\\\"facebook\\\\\\") {\\\\n      description\\\\n      email\\\\n      login\\\\n      name\\\\n      url\\\\n      id\\\\n    }\\\\n  }\\\\n\\"}",
    "headers": Headers {
      Symbol(map): Object {
        "content-type": Array [
          "application/json",
        ],
      },
    },
    "method": "POST",
  },
]
`;

exports[`@graphql-box/fetch-manager >> no batching >> when batch is false >> correct response data 1`] = `
Object {
  "data": Object {
    "organization": Object {
      "description": "We are working to build community through open source technology. NB: members must have two-factor auth.",
      "email": "",
      "id": "MDEyOk9yZ2FuaXphdGlvbjY5NjMx",
      "login": "facebook",
      "name": "Facebook",
      "url": "https://github.com/facebook",
    },
  },
  "headers": Headers {
    Symbol(map): Object {
      "Content-Length": Array [
        "268",
      ],
      "Content-Type": Array [
        "application/json",
      ],
      "cache-control": Array [
        "public, max-age=5",
      ],
    },
  },
}
`;

exports[`@graphql-box/fetch-manager >> no batching >> when context.hasDeferOrStream is true >> correct request 1`] = `
Array [
  "https://api.github.com/graphql?requestId=ea1cbc58eca798225b53f59d95ffb23a",
  Object {
    "body": "{\\"batched\\":false,\\"context\\":{\\"boxID\\":\\"123456789\\",\\"operation\\":\\"query\\",\\"whitelistHash\\":\\"\\"},\\"request\\":\\"\\\\n  {\\\\n    organization(login: \\\\\\"facebook\\\\\\") {\\\\n      description\\\\n      email\\\\n      login\\\\n      name\\\\n      url\\\\n      id\\\\n    }\\\\n  }\\\\n\\"}",
    "headers": Headers {
      Symbol(map): Object {
        "content-type": Array [
          "application/json",
        ],
      },
    },
    "method": "POST",
  },
]
`;

exports[`@graphql-box/fetch-manager >> no batching >> when context.hasDeferOrStream is true >> correct response data 1`] = `
Object {
  "data": Object {
    "organization": Object {
      "description": "We are working to build community through open source technology. NB: members must have two-factor auth.",
      "email": "",
      "id": "MDEyOk9yZ2FuaXphdGlvbjY5NjMx",
      "login": "facebook",
      "name": "Facebook",
      "url": "https://github.com/facebook",
    },
  },
  "headers": Headers {
    Symbol(map): Object {
      "Content-Length": Array [
        "268",
      ],
      "Content-Type": Array [
        "application/json",
      ],
      "cache-control": Array [
        "public, max-age=5",
      ],
    },
  },
}
`;

exports[`@graphql-box/fetch-manager >> when content type multipart is returned >> correct request 1`] = `
Array [
  "https://api.github.com/graphql?requestId=736da61e389d3e664e8cb26527eab248",
  Object {
    "body": "{\\"batched\\":false,\\"context\\":{\\"boxID\\":\\"123456789\\",\\"operation\\":\\"query\\",\\"whitelistHash\\":\\"\\"},\\"request\\":\\"\\\\n  {\\\\n    organization(login: \\\\\\"facebook\\\\\\") {\\\\n      ...OrganizationFieldsA @defer(if: true, label: \\\\\\"organizationDefer\\\\\\")\\\\n      login\\\\n      name\\\\n      repositories(first: 10) {\\\\n        edges {\\\\n          node {\\\\n            ... on Repository @include(if: true) {\\\\n              licenseInfo {\\\\n                permissions {\\\\n                  ...PermissionsFields @defer(if: true, label: \\\\\\"permissionsDefer\\\\\\")\\\\n                }\\\\n                id\\\\n              }\\\\n              ...RepositoryFields @skip(if: false) @defer(if: true, label: \\\\\\"repositoryDefer\\\\\\")\\\\n              id\\\\n            }\\\\n          }\\\\n        }\\\\n      }\\\\n      url\\\\n      id\\\\n    }\\\\n  }\\\\n\\\\n  fragment OrganizationFieldsA on Organization {\\\\n    email @include(if: true)\\\\n    description\\\\n    isVerified\\\\n    location\\\\n  }\\\\n\\\\n  fragment RepositoryFields on Repository {\\\\n    description\\\\n    homepageUrl\\\\n    name\\\\n  }\\\\n\\\\n  fragment PermissionsFields on LicenseRule {\\\\n    label @skip(if: false)\\\\n  }\\\\n\\"}",
    "headers": Headers {
      Symbol(map): Object {
        "content-type": Array [
          "application/json",
        ],
      },
    },
    "method": "POST",
  },
]
`;

exports[`@graphql-box/fetch-manager >> when content type multipart is returned >> correct response data 1`] = `
Array [
  Object {
    "data": Object {
      "organization": Object {
        "id": "MDEyOk9yZ2FuaXphdGlvbjY5NjMx",
        "login": "facebook",
        "repositories": Object {
          "edges": Array [
            Object {
              "node": Object {
                "id": "MDEwOlJlcG9zaXRvcnk0NTU2MDA=",
                "licenseInfo": Object {
                  "id": "MDc6TGljZW5zZTA=",
                },
              },
            },
            Object {
              "node": Object {
                "id": "MDEwOlJlcG9zaXRvcnk1NjU0MjY=",
                "licenseInfo": Object {
                  "id": "MDc6TGljZW5zZTU=",
                },
              },
            },
            Object {
              "node": Object {
                "id": "MDEwOlJlcG9zaXRvcnk2NTkzNDE=",
                "licenseInfo": Object {
                  "id": "MDc6TGljZW5zZTA=",
                },
              },
            },
            Object {
              "node": Object {
                "id": "MDEwOlJlcG9zaXRvcnk3Mzg0OTE=",
                "licenseInfo": Object {
                  "id": "MDc6TGljZW5zZTA=",
                },
              },
            },
            Object {
              "node": Object {
                "id": "MDEwOlJlcG9zaXRvcnk0NTI0MTgx",
                "licenseInfo": Object {
                  "id": "MDc6TGljZW5zZTI=",
                },
              },
            },
            Object {
              "node": Object {
                "id": "MDEwOlJlcG9zaXRvcnk2ODMzMzQ1",
                "licenseInfo": Object {
                  "id": "MDc6TGljZW5zZTA=",
                },
              },
            },
            Object {
              "node": Object {
                "id": "MDEwOlJlcG9zaXRvcnk2OTMwNDg5",
                "licenseInfo": Object {
                  "id": "MDc6TGljZW5zZTEz",
                },
              },
            },
            Object {
              "node": Object {
                "id": "MDEwOlJlcG9zaXRvcnk2OTM0Mzk1",
                "licenseInfo": Object {
                  "id": "MDc6TGljZW5zZTA=",
                },
              },
            },
            Object {
              "node": Object {
                "id": "MDEwOlJlcG9zaXRvcnk4MzIyNjQ5",
                "licenseInfo": Object {
                  "id": "MDc6TGljZW5zZTI=",
                },
              },
            },
            Object {
              "node": Object {
                "id": "MDEwOlJlcG9zaXRvcnk5NDU0Njc1",
                "licenseInfo": Object {
                  "id": "MDc6TGljZW5zZTg=",
                },
              },
            },
          ],
        },
      },
    },
    "hasNext": true,
    "headers": Object {},
  },
  Object {
    "data": Object {
      "organization": Object {
        "email": null,
        "isVerified": true,
        "location": "Menlo Park, California",
        "repositories": Object {
          "edges": Array [
            Object {
              "node": Object {
                "licenseInfo": Object {
                  "permissions": Array [],
                },
              },
            },
            Object {
              "node": Object {
                "licenseInfo": Object {
                  "permissions": Array [
                    Object {
                      "label": "Commercial use",
                    },
                    Object {
                      "label": "Modification",
                    },
                    Object {
                      "label": "Distribution",
                    },
                    Object {
                      "label": "Private use",
                    },
                  ],
                },
              },
            },
            Object {
              "node": Object {
                "licenseInfo": Object {
                  "permissions": Array [],
                },
              },
            },
            Object {
              "node": Object {
                "licenseInfo": Object {
                  "permissions": Array [],
                },
              },
            },
            Object {
              "node": Object {
                "licenseInfo": Object {
                  "permissions": Array [
                    Object {
                      "label": "Commercial use",
                    },
                    Object {
                      "label": "Modification",
                    },
                    Object {
                      "label": "Distribution",
                    },
                    Object {
                      "label": "Patent use",
                    },
                    Object {
                      "label": "Private use",
                    },
                  ],
                },
              },
            },
            Object {
              "node": Object {
                "licenseInfo": Object {
                  "permissions": Array [],
                },
              },
            },
            Object {
              "node": Object {
                "licenseInfo": Object {
                  "permissions": Array [
                    Object {
                      "label": "Commercial use",
                    },
                    Object {
                      "label": "Modification",
                    },
                    Object {
                      "label": "Distribution",
                    },
                    Object {
                      "label": "Private use",
                    },
                  ],
                },
              },
            },
            Object {
              "node": Object {
                "licenseInfo": Object {
                  "permissions": Array [],
                },
              },
            },
            Object {
              "node": Object {
                "licenseInfo": Object {
                  "permissions": Array [
                    Object {
                      "label": "Commercial use",
                    },
                    Object {
                      "label": "Modification",
                    },
                    Object {
                      "label": "Distribution",
                    },
                    Object {
                      "label": "Patent use",
                    },
                    Object {
                      "label": "Private use",
                    },
                  ],
                },
              },
            },
            Object {
              "node": Object {
                "licenseInfo": Object {
                  "permissions": Array [
                    Object {
                      "label": "Commercial use",
                    },
                    Object {
                      "label": "Modification",
                    },
                    Object {
                      "label": "Distribution",
                    },
                    Object {
                      "label": "Private use",
                    },
                  ],
                },
              },
            },
          ],
        },
      },
    },
    "hasNext": false,
    "headers": Object {},
    "paths": Array [
      "organisation",
      "organisation.repositories.edges.0.node.licenseInfo.permissions",
      "organisation.repositories.edges.1.node.licenseInfo.permissions",
      "organisation.repositories.edges.2.node.licenseInfo.permissions",
      "organisation.repositories.edges.3.node.licenseInfo.permissions",
      "organisation.repositories.edges.4.node.licenseInfo.permissions",
      "organisation.repositories.edges.5.node.licenseInfo.permissions",
      "organisation.repositories.edges.6.node.licenseInfo.permissions",
      "organisation.repositories.edges.7.node.licenseInfo.permissions",
      "organisation.repositories.edges.8.node.licenseInfo.permissions",
      "organisation.repositories.edges.9.node.licenseInfo.permissions",
    ],
  },
]
`;
